
Uno_zadanie1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000021e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000021e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000021e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000805  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006e4  00000000  00000000  00000aed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000351  00000000  00000000  000011d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  00001524  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f7  00000000  00000000  00001600  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000131  00000000  00000000  000019f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00001b28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ea       	ldi	r30, 0xAA	; 170
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 30       	cpi	r26, 0x02	; 2
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9d 00 	call	0x13a	; 0x13a <main>
  9e:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_18>:
		UDR0 = data[i];
		if(i==255)
			break;
		i++;
	}
}
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <cmd>
  ba:	8f 91       	pop	r24
  bc:	0f 90       	pop	r0
  be:	0f be       	out	0x3f, r0	; 63
  c0:	0f 90       	pop	r0
  c2:	1f 90       	pop	r1
  c4:	18 95       	reti

000000c6 <__vector_21>:
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
  da:	8f 91       	pop	r24
  dc:	0f 90       	pop	r0
  de:	0f be       	out	0x3f, r0	; 63
  e0:	0f 90       	pop	r0
  e2:	1f 90       	pop	r1
  e4:	18 95       	reti

000000e6 <__vector_2>:
  e6:	1f 92       	push	r1
  e8:	0f 92       	push	r0
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	0f 92       	push	r0
  ee:	11 24       	eor	r1, r1
  f0:	0f 90       	pop	r0
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	0f 90       	pop	r0
  f6:	1f 90       	pop	r1
  f8:	18 95       	reti

000000fa <__vector_16>:
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	8f 93       	push	r24
 106:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 10a:	87 bd       	out	0x27, r24	; 39
 10c:	8f 91       	pop	r24
 10e:	0f 90       	pop	r0
 110:	0f be       	out	0x3f, r0	; 63
 112:	0f 90       	pop	r0
 114:	1f 90       	pop	r1
 116:	18 95       	reti

00000118 <USART_Init>:
 118:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 11c:	80 e1       	ldi	r24, 0x10	; 16
 11e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 122:	e0 ec       	ldi	r30, 0xC0	; 192
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	82 60       	ori	r24, 0x02	; 2
 12a:	80 83       	st	Z, r24
 12c:	88 e9       	ldi	r24, 0x98	; 152
 12e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 132:	86 e0       	ldi	r24, 0x06	; 6
 134:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 138:	08 95       	ret

0000013a <main>:
	unsigned int cnt = 0;
	unsigned char sendADC = 0;
	unsigned char lastADCValue=0;
    unsigned char tempVal1;
	
	DDRB |= 0x2F;
 13a:	84 b1       	in	r24, 0x04	; 4
 13c:	8f 62       	ori	r24, 0x2F	; 47
 13e:	84 b9       	out	0x04, r24	; 4
	PORTB |= 0x21;
 140:	85 b1       	in	r24, 0x05	; 5
 142:	81 62       	ori	r24, 0x21	; 33
 144:	85 b9       	out	0x05, r24	; 5
	
	DDRD = 0x40;
 146:	20 e4       	ldi	r18, 0x40	; 64
 148:	2a b9       	out	0x0a, r18	; 10
	
	EICRA |= (1<<ISC10 | 1<<ISC11);
 14a:	e9 e6       	ldi	r30, 0x69	; 105
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	8c 60       	ori	r24, 0x0C	; 12
 152:	80 83       	st	Z, r24
	EIMSK |= 0x02;
 154:	e9 9a       	sbi	0x1d, 1	; 29
	
	// ADC Init
	ADMUX = (1<<REFS0) | (1<<ADLAR);
 156:	80 e6       	ldi	r24, 0x60	; 96
 158:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	DIDR0 = (1<<ADC0D);
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	ADCSRB = 0;
 162:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	ADCSRA = (1<<ADEN) | (1<<ADATE) | (1<<ADIE) | 0x07;
 166:	ea e7       	ldi	r30, 0x7A	; 122
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	8f ea       	ldi	r24, 0xAF	; 175
 16c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 16e:	80 81       	ld	r24, Z
 170:	80 64       	ori	r24, 0x40	; 64
 172:	80 83       	st	Z, r24
	TCCR1B = (1<<CS11) | (1<<CS10) ;
	TIMSK1 = (1<<TOIE1);
	*/
	
	//Timer1 Init - CTC mode
	TCCR1A = (1<<COM1A0);
 174:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (1<<WGM12) | (1<<CS12) | (1<<CS10);
 178:	8d e0       	ldi	r24, 0x0D	; 13
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TIMSK1 = 0;//(1<<OCIE1A);
 17e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	OCR1A = 390;
 182:	26 e8       	ldi	r18, 0x86	; 134
 184:	31 e0       	ldi	r19, 0x01	; 1
 186:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 18a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	//Timer0 Init - PWM
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM01) | (1<<WGM00);
 18e:	83 ec       	ldi	r24, 0xC3	; 195
 190:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS01) | (1<<CS00);
 192:	83 e0       	ldi	r24, 0x03	; 3
 194:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0);
 196:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	OCR0A = 100;
 19a:	84 e6       	ldi	r24, 0x64	; 100
 19c:	87 bd       	out	0x27, r24	; 39
	
	//USART Init
	USART_Init();
 19e:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Init>
	
	sei();
 1a2:	78 94       	sei
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <main+0x6a>

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
